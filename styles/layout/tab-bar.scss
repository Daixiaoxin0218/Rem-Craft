@use "sass:math";
@use "../common" as *;
@use "../component/list";

$item-type: "base";
$w: get($component-size, "exsmall");
$btn-w: get($component-size, "small");

//页签栏
.layout-tab-bar {
  flex: unset;
  background-color: get($bg, "page", 1);

  &:nth-child(2) {
    margin-left: 0 !important;
    min-width: $btn-w * 2 + $interval;
  }

  .item {
    @include item-tran("page");
    @include component-base($item-type);
    flex: unset;
    min-height: 0;
    padding: $interval;
    box-shadow: unset !important;

    &:not(:last-child) {
      margin-right: $fn-space;
    }

    &__icon {
      @include emoji-icon($w, 12px, get($icon, "base"));
    }

    &__graphic {
      @include svg($w, get($icon, "small"), $important: true);
    }

    &__text {
      padding: 0;
      transition: unset;
      margin-left: $interval;
    }

    &__close {
      @include item-tran("component");
      @include component-base("exsmall");
      @include svg-div($w, 10px);
      border-radius: get($radius, "small");
      margin-left: $interval;

      svg {
        opacity: 0.3;
        background-color: transparent !important;
      }

      &:hover svg {
        opacity: 0.6;
      }
    }

    &--pin {
      background-color: get($bg, "component", 1);
      .item {
        &__text {
          margin: 0;
          padding: 0 $interval;
        }
      }
    }

    &--focus {
      @include color("focus");
      @include item-unchange("focus");

      .item__graphic {
        @include color("focus");
      }

      > .item__text {
        @include color("focus");

        .layout__wnd--active & {
          @include color("focus");
        }
      }
      .item__close {
        @include item-tran("focus");
        svg {
          @include color("focus");
        }
      }

      .layout__wnd--active & {
        box-shadow: unset !important;
      }
    }

    &--readonly {
      @include item-unchange("page");
      padding: 0;

      .item__close {
        @include icon-btn("page", $btn-w, 12px, true);

        &[data-type="more"] {
          @include svg-div($btn-w, 10px, $important: true);
          margin-left: $interval;
        }
      }
    }
  }

  .layout__center & {
    &:not(:empty) {
      @include component-base($item-type);
      margin: 8px 8px 0px;
    }
    .item {
      border-radius: unset;
      margin: 0;
      box-shadow: 2px -22px 0px 0px get($bg, "page", 1),
        1px -6px 0px 0px get($border, 2) !important;

      &:hover {
        border-radius: get($radius, $item-type);
        box-shadow: unset !important;
      }

      &__text {
        min-width: 86px;
      }

      &--focus {
        border-radius: get($radius, $item-type);
        box-shadow: unset !important;
      }
    }
  }
}
